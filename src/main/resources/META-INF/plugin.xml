<idea-plugin>
    <id>me.lotabout.codegenerator</id>
    <name>Code Generator</name>
    <version>2.0.4</version>
    <vendor email="starfish.hu@gmail.com">Haixing Hu</vendor>

    <description><![CDATA[

  <p>Please backup your configurations before update!!!</p>

  <p>This plugin allows user to create customized velocity templates like <code>toString</code> or <code>builder</code></p>
  <p>As we know, Intellij had provided useful code generators such as constructors, getter/setters, equals, hashCode,
   overrides and delegates, etc. And Intellij allows us to apply customized velocity templates for each generator.
   But we cannot add our own generators.</p>
  <p>Code Generator is here to help. Two types of generation are supported here</p>
  <ul>
    <li>Members(fields/method) based templates, such as serializers, equals, etc.</li>
    <li>Class based template, such as transformers, converters, etc. Normally new classes are created.</li>
  </ul>
  <p>I've always hoped Intellij would support this by default, but for now we have an working alternative.</p>
  <p>See <a href="https://github.com/lotabout/CodeGenerator/blob/master/README.md">README</a> for more</p>
    ]]></description>

    <change-notes><![CDATA[
  <ul>
  <li>Fix the bug that the plugin configuration panel cannot be opened in Intellij IDEA 251.*.</li>
  <li>version 2.0.3 Support Intellij IDEA 253.*.</li>
  <li>version 2.0.2 Fix the potential bugs that comparing two `PsiClassType` may cause `PsiInvalidElementAccessException`.</li>
  <li>version 2.0.1 Minor refactor.</li>
  <li>version 2.0.0 Refactor a lot of codes.</li>
  <li>version 1.8.1 Add the utility module `NameUtilEx`, which is an extension of `com.intellij.psi.codeStyle.NameUtil`;
    Add the utility module `StringUtilEx`, which is an extension of `com.intellij.openapi.util.text.StringUtil`;
    Add some utility methods to `MemberEntry`; Support remove multiple selected templates.</li>
  </li>
  <li>version 1.8.0 Support generating code in non-Java files</li>
  <li>version 1.7.2 Intellij 2024.3 support</li>
  <li>version 1.7.0 Refactor</li>
  <li>version 1.6.0 Intellij 2023.2 support</li>
  <li>version 1.5.2 Default loaded include files - to add complex logic to use for className generation</li>
  <li>version 1.5.1 Sub include parsing</li>
  <li>version 1.5.0 Intellij 2021.3 support</li>
  <li>version 1.5.0 Adds isAnnotatedWith method for field and method entities</li>
  <li>version 1.5.0 Adds default target module path and default target package name for class generation</li>
  <li>version 1.5.0 Macro support - Adds include support to define common shared macros</li>
  <li>version 1.5.0 Adds copy template functionality</li>
  <li>version 1.4.1 Fix "Replace existing" policy when no existing member is found</li>
  <li>version 1.4.0 compatible with 2020.1</li>
  <li>version 1.3.3 fix: pipeline settings could not be saved.</li>
  <li>version 1.3.2 support idea 2016.3 and after</li>
  <li>version 1.3.1 move Code Generator Menu to Generate menu</li>
  <li>version 1.3 Support insert at caret. Fix bugs</li>
  <li>version 1.2 Able to import/export settings</li>
  <li>version 1.1 Able to define workflows for selecting members/classes</li>
  <li>version 1.0 First release</li>
  </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="232.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <applicationService serviceInterface="me.lotabout.codegenerator.CodeGeneratorSettings"
                            serviceImplementation="me.lotabout.codegenerator.CodeGeneratorSettings"/>
        <applicationService serviceInterface="me.lotabout.codegenerator.CodeGenerator"
                            serviceImplementation="me.lotabout.codegenerator.CodeGenerator"/>

        <applicationConfigurable instance="me.lotabout.codegenerator.ui.CodeGeneratorConfigurable"/>
    </extensions>

    <actions>
        <!-- Add your actions here -->
        <group id="me.lotabout.codegenerator.action.CodeGeneratorMenu"
               class="me.lotabout.codegenerator.action.CodeGeneratorGroup"
               text="CodeGenerator"
               description="Code Generator"
               popup="true">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="after"
                          relative-to-action="ProjectViewPopupMenuRefactoringGroup"/>
            <add-to-group group-id="GenerateGroup"/>
            <add-to-group group-id="EditorPopupMenu"/>
        </group>
    </actions>

    <depends>com.intellij.modules.java</depends>

</idea-plugin>